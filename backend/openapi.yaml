openapi: 3.0.0
info:
  title: taskr API
  description: API for managing tasks in the taskr application
  version: 1.0.0
servers:
  - url: http://localhost:3001
    description: Local development server
  - url: https://api.example.com
    description: Production server (placeholder)
paths:
  /tasks:
    get:
      summary: Retrieve all tasks
      description: Returns a list of all tasks
      operationId: getTasks
      parameters:
        - name: status
          in: query
          description: Filter tasks by status
          required: false
          schema:
            type: string
            enum: [TO_DO, IN_PROGRESS, COMPLETED]
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new task
      description: Adds a new task to the system
      operationId: createTask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInput'
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tasks/{id}:
    get:
      summary: Retrieve a specific task
      description: Returns a specific task by ID
      operationId: getTaskById
      parameters:
        - name: id
          in: path
          description: Task ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A task object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update a task
      description: Updates an existing task
      operationId: updateTask
      parameters:
        - name: id
          in: path
          description: Task ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInput'
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a task
      description: Deletes a task by ID
      operationId: deleteTask
      parameters:
        - name: id
          in: path
          description: Task ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Task deleted successfully
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the task
        title:
          type: string
          description: Title of the task
        description:
          type: string
          description: Description of the task
          nullable: true
        status:
          type: string
          description: Current status of the task
          enum: [TO_DO, IN_PROGRESS, COMPLETED]
          default: TO_DO
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp
      required:
        - id
        - title
        - status
        - createdAt
        - updatedAt
    TaskInput:
      type: object
      properties:
        title:
          type: string
          description: Title of the task
        description:
          type: string
          description: Description of the task
          nullable: true
        status:
          type: string
          description: Current status of the task
          enum: [TO_DO, IN_PROGRESS, COMPLETED]
          default: TO_DO
      required:
        - title
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
      required:
        - code
        - message